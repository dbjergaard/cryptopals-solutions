#!/usr/bin/env ruby 
require 'curb'
require 'crypto_tools'


def challenge1
  if Converters.hex_to_base64("49276d206b696c6c696e6720796f757220627261696e206c696b65206120706f69736f6e6f7573206d757368726f6f6d") != "SSdtIGtpbGxpbmcgeW91ciBicmFpbiBsaWtlIGEgcG9pc29ub3VzIG11c2hyb29t"
    raise "Challenge 1 failed!"
  else
    print "Challenge 1 passed!"
  end
end

def challenge2
  if CryptoTools.hex_xor("1c0111001f010100061a024b53535009181c","686974207468652062756c6c277320657965") != "746865206b696420646f6e277420706c6179"
    raise "Challenge 2 failed!"
  else
    print "Challenge 2 passed!"
  end
end
 
def challenge3
  if CryptoTools.break_xor("1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736") != "X"
    raise "Challenge 3 failed!"
  else
    print "Challenge 3 passed!"
  end
end

def challenge4
  cipher_http = Curl.get("http://cryptopals.com/static/challenge-data/4.txt")
  key=""
  cipher_http.body_str.each_line{ |l|
    # puts l
    key = CryptoTools.break_xor(l.strip())
    if key.length > 0
      puts Converters.hex_to_bytes(hex_xor_key(l.strip(),str_to_hex(key)))
    end
  }
  nil
end

def challenge5
  if CryptoTools.str_xor_key("Burning 'em, if you ain't quick and nimble
I go crazy when I hear a cymbal","ICE")!="0b3637272a2b2e63622c2e69692a23693a2a3c6324202d623d63343c2a26226324272765272a282b2f20430a652e2c652a3124333a653e2b2027630c692b20283165286326302e27282f"
    raise "Challenge 4 failed!"
  else
    print "Challenge 4 passed!"
  end
end
  
def run_challenges
  challenge1
  challenge2
  challenge3
  # challenge4
  challenge5
end

run_challenges
